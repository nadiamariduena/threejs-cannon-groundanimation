{"version":3,"sources":["App.js","index.js"],"names":["style","height","App","sceneSetup","width","el","clientWidth","clientHeight","scene","THREE","camera","position","z","controls","OrbitControls","renderer","alpha","antialias","setSize","appendChild","domElement","addCustomSceneObjects","noise","Perlin","geometry","material","color","wireframe","cube","add","rotation","set","startAnimationLoop","animationSpeed","performance","now","eachVertice","vertices","length","p","normalize","multiplyScalar","perlin3","x","y","computeVertexNormals","normalsNeedUpdate","verticesNeedUpdate","render","requestID","window","requestAnimationFrame","handleWindowResize","aspect","updateProjectionMatrix","this","addEventListener","removeEventListener","cancelAnimationFrame","dispose","Fragment","className","ref","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"kRAMMA,EAAQ,CACZC,OAAQ,KA8MKC,E,4MAvKbC,WAAa,WAEX,IAAMC,EAAQ,EAAKC,GAAGC,YAChBL,EAAS,EAAKI,GAAGE,aAKvB,EAAKC,MAAQ,IAAIC,IACjB,EAAKC,OAAS,IAAID,IAChB,GACAL,EAAQH,EACR,GACA,KAMF,EAAKS,OAAOC,SAASC,EAAI,IAGzB,EAAKC,SAAW,IAAIC,IAAc,EAAKJ,OAAQ,EAAKL,IAIpD,EAAKU,SAAW,IAAIN,IAAoB,CAEtCO,OAAO,EAEPC,WAAW,IAEb,EAAKF,SAASG,QAAQd,EAAOH,GAE7B,EAAKI,GAAGc,YAAY,EAAKJ,SAASK,a,EASpCC,sBAAwB,WAEtB,EAAKC,MAAQ,IAAIC,IAGF,IAAId,IAKnB,EAAKe,SAAW,IAAIf,IAAqB,GAAI,GAAI,GAAI,IAKrD,EAAKgB,SAAW,IAAIhB,IAAwB,CAC1CiB,MAAO,EACPC,WAAW,IAKb,EAAKC,KAAO,IAAInB,IAAW,EAAKe,SAAU,EAAKC,UAC/C,EAAKjB,MAAMqB,IAAI,EAAKD,MAIpB,EAAKA,KAAKE,SAASC,KAAK,GAAK,EAAG,I,EAkBlCC,mBAAqB,WAKnB,EAAKC,eAAqC,KAApBC,YAAYC,MAUlC,IADA,IAEMC,EAAc,EAClBA,EAAc,EAAKR,KAAKJ,SAASa,SAASC,OAC1CF,IACA,CACA,IAAIG,EAAI,EAAKX,KAAKJ,SAASa,SAASD,GACpCG,EAAEC,YAAYC,eACZ,EACE,GACE,EAAKnB,MAAMoB,QAVN,EAWHH,EAAEI,EAAa,EAAKV,eAXjB,EAYHM,EAAEK,EAZC,EAaHL,EAAE3B,IAMZ,EAAKgB,KAAKJ,SAASqB,uBACnB,EAAKjB,KAAKJ,SAASsB,mBAAoB,EACvC,EAAKlB,KAAKJ,SAASuB,oBAAqB,EAIxC,EAAKhC,SAASiC,OAAO,EAAKxC,MAAO,EAAKE,QAEtC,EAAKuC,UAAYC,OAAOC,sBAAsB,EAAKnB,qB,EAQrDoB,mBAAqB,WACnB,IAAMhD,EAAQ,EAAKC,GAAGC,YAChBL,EAAS,EAAKI,GAAGE,aAEvB,EAAKQ,SAASG,QAAQd,EAAOH,GAC7B,EAAKS,OAAO2C,OAASjD,EAAQH,EAI7B,EAAKS,OAAO4C,0B,uDAlLd,WACEC,KAAKpD,aACLoD,KAAKlC,wBACLkC,KAAKvB,qBAQLkB,OAAOM,iBAAiB,SAAUD,KAAKH,sB,kCAQzC,WACEF,OAAOO,oBAAoB,SAAUF,KAAKH,oBAC1CF,OAAOQ,qBAAqBH,KAAKN,WACjCM,KAAK1C,SAAS8C,Y,oBAiKhB,WAAU,IAAD,OACP,OACE,cAAC,IAAMC,SAAP,UACE,qBAAKC,UAAU,sBAAf,SACE,qBACEA,UAAU,cACV7D,MAAOA,EACP8D,IAAK,SAACA,GAAD,OAAU,EAAKzD,GAAKyD,a,GAjMnBC,a,MCLlBC,IAAShB,OACP,cAAC,IAAMiB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ec7bb24f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport Perlin from \"phaser3-rex-plugins/plugins/perlin.js\";\n\n//phaser3-rex-notes/master/dist/rexperlinplugin.min.js', true);\nconst style = {\n  height: 550, // we can control scene size by setting container dimensions\n};\n//\n\nclass App extends Component {\n  //\n  //\n  componentDidMount() {\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n\n    //\n    //\n\n    //\n    // 7  ******\n    //\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n  /*\n\n                9\n\n\n */\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  }\n  /*\n\n                2\n\n\n */\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n    //\n    //\n    //\n    //\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      75, // fov = field of view\n      width / height, // aspect ratio\n      0.1, // near plane\n      1000 // far plane\n    );\n    //\n    //\n    // 6  ******\n    //\n    this.camera.position.z = 2.6; // is used here to set some distance from a cube that is located at z = 0\n    // OrbitControls allow a camera to orbit around the object\n    // https://threejs.org/docs/#examples/controls/OrbitControls\n    this.controls = new OrbitControls(this.camera, this.el);\n    //\n    //\n    //\n    this.renderer = new THREE.WebGLRenderer({\n      // set the transparency of the scene, otherwise its black\n      alpha: true,\n      // will make the edges smooth\n      antialias: true,\n    });\n    this.renderer.setSize(width, height);\n    // here you append it to the jsx\n    this.el.appendChild(this.renderer.domElement); // mount using React ref\n  };\n  /*\n\n                3\n\n\n */\n\n  addCustomSceneObjects = () => {\n    // https://rexrainbow.github.io/phaser3-rex-notes/docs/site/perlin/\n    this.noise = new Perlin();\n    //\n    //\n    const loader = new THREE.TextureLoader();\n    //\n    //\n    // THREE.PlaneGeometry(5, 3); the 5 stands for width and 3 for height\n    //const geometry = new THREE.PlaneGeometry(5, 2.5, 20, 15);\n    this.geometry = new THREE.SphereGeometry(50, 50, 50, 50);\n    // it will increase the segments in the geometry\n    // its related to this   const waveX1 = 0.1 * Math.sin(dots_vertices.x * 2 + t_timeClock);\n    //\n    //\n    this.material = new THREE.MeshBasicMaterial({\n      color: 0x000000,\n      wireframe: true,\n      // map: loader.load(\"/img/NataliaSamoilova_metalmagazine-10.jpg\"),\n    });\n\n    //\n    this.cube = new THREE.Mesh(this.geometry, this.material);\n    this.scene.add(this.cube);\n    //\n    //\n    // new rotation\n    this.cube.rotation.set(-0.1, 0, 0);\n    // x direction y direction and z\n    //\n\n    //\n    //\n\n    // this.clock = new THREE.Clock();\n\n    //\n  };\n  /*\n\n                4\n\n\n */\n\n  startAnimationLoop = () => {\n    // the original animation\n    //codepen.io/farisk/pen/vrbzwL?editors=0010\n    // change '0.003' for more aggressive animation\n    // 01 is very slow, 03 faster, 05 extremely faster\n    this.animationSpeed = performance.now() * 0.001;\n    //\n    //\n\n    //\n    //--------------------------------\n    //      The waves\n    // -------------------------------\n    //\n    var spikes = 2;\n    for (\n      var eachVertice = 0;\n      eachVertice < this.cube.geometry.vertices.length;\n      eachVertice++\n    ) {\n      var p = this.cube.geometry.vertices[eachVertice];\n      p.normalize().multiplyScalar(\n        1 +\n          0.3 *\n            this.noise.perlin3(\n              p.x * spikes + this.animationSpeed,\n              p.y * spikes,\n              p.z * spikes\n            )\n      );\n    }\n    // noise related you can also use Math.sin instead of the noise but its different\n    // https://rexrainbow.github.io/phaser3-rex-notes/docs/site/perlin/\n    this.cube.geometry.computeVertexNormals();\n    this.cube.geometry.normalsNeedUpdate = true;\n    this.cube.geometry.verticesNeedUpdate = true;\n    //\n    //\n\n    this.renderer.render(this.scene, this.camera);\n\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n  };\n  /*\n\n                8\n\n\n */\n  handleWindowResize = () => {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n\n    // Note that after making changes to most of camera properties you have to call\n    // .updateProjectionMatrix for the changes to take effect.\n    this.camera.updateProjectionMatrix();\n  };\n  //\n  //------------------\n  //\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"wrapper-flagZoomBox\">\n          <div\n            className=\"flagZoomBox\"\n            style={style}\n            ref={(ref) => (this.el = ref)}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n//\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// imrd shortcut for: import ReactDOM from 'react-dom'\nimport \"./scss/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}